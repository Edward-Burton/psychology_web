<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="cn.xhu.softwareengineering.potal.dao.UserMapper">
	<resultMap id="BaseResultMap" type="PsychoUser">
		<id column="psychouser_id" property="psychouser_id"
			jdbcType="INTEGER" />
		<result column="psychouser_acct" property="psychouser_acct"
			jdbcType="VARCHAR" />
		<result column="psychouser_password"
			property="psychouser_password" jdbcType="CHAR" />
		<result column="psychouser_name" property="psychouser_name"
			jdbcType="VARCHAR" />
		<result column="psychouser_title" property="psychouser_title"
			jdbcType="VARCHAR" />
		<result column="psychouser_intro" property="psychouser_intro"
			jdbcType="VARCHAR" />
		<result column="psychouser_head_portrait" property="psychouser_head_portrait"
			jdbcType="VARCHAR" />
		<result column="psychouser_phone_number" property="psychouser_phone_number"
			jdbcType="VARCHAR" />
		<result column="psychouser_mail" property="psychouser_mail"
			jdbcType="VARCHAR" />
		<result column="psychouser_createtime"
			property="psychouser_createtime" jdbcType="CHAR" />
	</resultMap>
	
	
	<resultMap type="PsychoArticle" id="BaseArticleMap">
		<id column="psycho_article_id" property="articleId" />
		<result column="psycho_article_title" property="articleTitle" />
		<result column="psycho_article_img" property="articleImg" />
		<result column="psycho_article_pubtime" property="pubTime" />
		<result column="psycho_article_author" property="author" />
		<result column="psycho_article_reads_num" property="readsNum" />
		<result column="psycho_article_content" property="content" />
		<association property="psychoCategory"
			javaType="PsychoCategory" column="psycho_article_id"
			select="selectCategorybyArticleId" />
		<collection property="articleLabels" ofType="PsychoLabel"
			column="psycho_article_id" select="selectLabelsbyArticleId" />
	</resultMap>
	
	<resultMap type="UserCollection" id="BaseUserCollectionArticle">
		<id column="user_collection_id" property="user_collection_id" />
		<result column="user_collection_from_user_id" property="user_collection_from_user_id" />
		<result column="user_collection_type" property="user_collection_type" />
		<collection property="user_collection_obj" ofType="Object"
			column="{user_collection_type=user_collection_type,user_collection_from_user_id=user_collection_from_user_id}" select="selectCollectionArticle" />
	</resultMap>
	
	<resultMap type="UserCollection" id="BaseUserCollectionQustionA">
		<id column="user_collection_id" property="user_collection_id" />
		<result column="user_collection_from_user_id" property="user_collection_from_user_id" />
		<result column="user_collection_type" property="user_collection_type" />
		<collection property="user_collection_obj" ofType="Object"
			column="{user_collection_type=user_collection_type,user_collection_from_user_id=user_collection_from_user_id}" select="selectCollectionQustionA" />
	</resultMap>
	
	<resultMap type="UserCollection" id="BaseUserCollectionFM">
		<id column="user_collection_id" property="user_collection_id" />
		<result column="user_collection_from_user_id" property="user_collection_from_user_id" />
		<result column="user_collection_type" property="user_collection_type" />
		<collection property="user_collection_obj" ofType="Object"
			column="{user_collection_type=user_collection_type,user_collection_from_user_id=user_collection_from_user_id}" select="selectCollectionFM" />
	</resultMap>
	
	<resultMap type="PsychoArticle" id="BaseArticle">
		<id column="psycho_article_id" property="articleId" />
		<result column="psycho_article_title" property="articleTitle" />
		<result column="psycho_article_img" property="articleImg" />
		<result column="psycho_article_pubtime" property="pubTime" />
		<result column="psycho_article_desc" property="desc" />
		<result column="psycho_article_reads_num" property="readsNum" />
	</resultMap>
	
	
	<resultMap type="UserQuestions" id="BaseQuestion">
		<id column="user_question_id" property="user_question_id" />
		<result column="user_question_title" property="user_question_title" />
		<result column="user_question_content" property="user_question_content" />
		<result column="user_question_pultime" property="user_question_pultime" />
		<result column="user_anonym" property="user_anonym" />
		<association column="user_question_id" property="answer_count" javaType="Integer" select="queryanswercountById" />
		<association column="question_master_id" property="question_master" javaType="PsychoUser" select="queryQuestionUserById" />
	</resultMap>
	
	<resultMap type="PsychoUser" id="BaseUser">
		<id column="psychouser_id" property="psychouser_id" />
		<result column="psychouser_name" property="psychouser_name" />
		<result column="psychouser_head_portrait" property="psychouser_head_portrait" />
	</resultMap>
	
	<resultMap type="PsychoRadio" id="BaseRadio">
		<id column="psycho_radio_id" property="psycho_radio_id" />
		<result column="psycho_radio_title"
			property="psycho_radio_title" />
		<result column="psycho_radio_description"
			property="psycho_radio_description" />
		<result column="psycho_radio_audio"
			property="psycho_radio_audio" />
		<result column="psycho_radio_backgroud"
			property="psycho_radio_backgroud" />
		<result column="psycho_radio_pultime"
			property="psycho_radio_pultime" />
		<association property="radioAnchor" javaType="RadioAnchor"
			column="psycho_radio_anchor_id" select="selectanchorbyid" />
	</resultMap>
	
	<resultMap id="BaseQaUser" type="PsychoUser">
		<id column="psychouser_id" property="psychouser_id"
			jdbcType="INTEGER" />
		<result column="psychouser_name" property="psychouser_name"
			jdbcType="VARCHAR" />
		<association property="questionNum"
			javaType="Integer" column="psychouser_id"
			select="selectQuestionNumbyUserId" />
		<association property="questionAnswerNum"
			javaType="Integer" column="psychouser_id"
			select="selectQaNumUserId" />
		<association property="zanNum"
			javaType="Integer" column="psychouser_id"
			select="selectzanNumByUserId" />
	</resultMap>
	
	<select id="selectQuestionNumbyUserId" resultType="Integer">
		select count(*) from user_questions where question_master_id=#{psychouser_id}
	</select>
	
	<select id="selectQaNumUserId" resultType="Integer">
		select count(*) from question_answers where answerer_id=#{psychouser_id}
	</select>
	
	<select id="selectzanNumByUserId" resultType="Integer">
		select count(*) from user_like where (like_type=1 and like_to_id in(select psycho_article_id from psycho_article where psycho_article_pubuserid=#{psychouser_id})) OR (like_type=2 and like_to_id in(select question_answer_id from question_answers where answerer_id=#{psychouser_id}))
	</select>
	
	<select id="selectanchorbyid" resultType="RadioAnchor">
		select * from
		radio_anchor where radio_anchor_id=#{psycho_radio_anchor_id}
	</select>
	
	<select id="queryUserQaById" resultMap="BaseQaUser">
		select * from psycho_user where psychouser_id=#{userid}
	</select>
	
	<select id="queryanswercountById" resultType="Integer">
		SELECT COUNT(*) FROM question_answers WHERE  answer_parent_id IS Null and question_id=#{user_question_id}
	</select>
	
	<select id="queryQuestionUserById" resultMap="BaseUser">
		SELECT psychouser_id,psychouser_acct,psychouser_name,psychouser_head_portrait FROM psycho_user WHERE psychouser_id = #{question_master_id}	
	</select>
	
	<select id="selectCollectionArticle" resultMap="BaseArticle">
		select * from psycho_article where psycho_article_id in (select user_collectioin_to_id from user_collection where user_collection_from_user_id=#{user_collection_from_user_id} and user_collection_type=#{user_collection_type})
	</select>
	
	<select id="selectCollectionQustionA" resultMap="BaseQuestion">
		select * from user_questions where user_question_id in (select user_collectioin_to_id from user_collection where user_collection_from_user_id=#{user_collection_from_user_id} and user_collection_type=#{user_collection_type})
	</select>
	
	<select id="selectCollectionFM" resultMap="BaseRadio">
		select * from psycho_radio where psycho_radio_id in (select user_collectioin_to_id from user_collection where user_collection_from_user_id=#{user_collection_from_user_id} and user_collection_type=#{user_collection_type})
	</select>
	
	
	<select id="queryUserCollectArticle" resultMap="BaseUserCollectionArticle">
		select * from user_collection where user_collection_from_user_id=#{userid} and user_collection_type=#{typeid} limit 0,1
	</select>
	
	<select id="queryUserCollectQustionA" resultMap="BaseUserCollectionQustionA">
		select * from user_collection where user_collection_from_user_id=#{userid} and user_collection_type=#{typeid} limit 0,1
	</select>
	
	<select id="queryUserCollectFM" resultMap="BaseUserCollectionFM">
		select * from user_collection where user_collection_from_user_id=#{userid} and user_collection_type=#{typeid} limit 0,1
	</select>
	
	<!-- 获取文章心理学分类 -->
	<select id="selectCategorybyArticleId"
		resultType="PsychoCategory">
		select pc.*
		from psycho_article pa,psycho_category
		pc,article_category ac
		where pa.psycho_article_id =#{psycho_article_id}
		and pa.psycho_article_id = ac.article_id and ac.category_id =
		pc.psycho_category_id
	</select>
	
	<!-- 获取文章标签列表 -->
	<select id="selectLabelsbyArticleId" resultType="PsychoLabel">
		select
		psycho_label_id,psycho_label_name,psycho_label_parentid,psycho_label_description,psycho_label_alias
		from psycho_label,article_label
		where label_id=psycho_label_id and
		psychoarticle_id =#{psycho_article_id}
	</select>
	
	<select id="queryFollow" resultType="Integer">
		select count(*) from user_follow where cur_user_id=#{curUserId} and follow_user_id=#{followUserId}
	</select>
	
	<select id="queryUserById" resultMap="BaseResultMap">
		select * from psycho_user where psychouser_id=#{userid}
	</select>

	<select id="queryUserlogin" parameterType="map"
		resultMap="BaseResultMap">
		select psychouser_id, psychouser_acct, psychouser_password,
		psychouser_name,psychouser_head_portrait, psychouser_mail, psychouser_createtime
		from
		psycho_user where psychouser_acct=#{psychouser_acct} and
		psychouser_password=#{psychouser_password}
	</select>
	
	<select id="queryUserLikeComment" parameterType="map" resultType="Integer">
		select like_to_id from user_like where like_type=#{typeid} and like_from_user_id=#{userid} and like_main_id=#{mainid} and like_main_type=#{maintype}
	</select>
	
	<select id="queryLikeByUserId" parameterType="Integer"
		resultType="Integer">
		select COUNT(*) FROM user_like WHERE (like_type=1 AND like_to_id IN (SELECT psycho_article_id FROM psycho_article WHERE psycho_article_pubuserid=#{userid}) )OR(like_type=2 AND like_to_id IN(SELECT question_answer_id FROM question_answers WHERE answerer_id=#{userid}))
	</select>
	
	<select id="queryLikesNum" parameterType="Integer"
		resultType="Integer">
		select count(*) from user_like where like_type=#{typeid} and like_to_id=#{toid}
	</select>
	
	<select id="queryIsCollect" parameterType="map"
		resultType="Integer">
		select count(*) from user_collection where user_collectioin_to_id=#{toid} and user_collection_from_user_id=#{userid} and user_collection_type=#{typeid}
	</select>
	
	<select id="queryArticleByUserId" parameterType="Integer"
		resultMap="BaseArticleMap">
	select * from psycho_article where psycho_article_pubuserid=#{userid}
	</select>
	
	<!-- <insert id="insertUser"> insert into t_user ( name,userpswd,sex,email,loginacct 
		) values ( #{name},#{userpswd},#{sex},#{email},#{loginacct} ) <selectKey 
		keyProperty="id" resultType="int"> select @@identity as id </selectKey> </insert> -->

	<!-- <update id="updateUser"> update t_user set name = #{name}, sex = #{sex}, 
		email = #{email}, loginacct = #{loginacct} where id = #{id} </update> <delete 
		id="deleteUserRole"> delete from t_user_role where userid = #{userid} and 
		roleid = #{roleid} </delete> -->

	<insert id="addFollow">
	     insert into user_follow
	     (cur_user_id,follow_user_id)values(#{curUserId},#{followUserId})
		
	</insert>
	
	<delete id="cancelFollow">
	delete from user_follow where follow_user_id=#{followUserId} and cur_user_id=#{curUserId}
	</delete>
	
	<insert id="addLike">
	     insert into user_like
	     <choose>
	     <when test="maintype==null">
		(like_type,like_to_id,like_from_user_id)values(#{typeid},#{toid},#{userid})
	     </when>
		<otherwise>
		(like_type,like_to_id,like_from_user_id,like_main_id,like_main_type)values(#{typeid},#{toid},#{userid},#{mainid},#{maintype})
		</otherwise>
	     </choose>
	</insert>
	
	<delete id="cancelLike">
		delete from user_like where 
		<choose>
	     <when test="mainid==null">
		like_type=#{typeid} and like_from_user_id=#{userid} and like_to_id=#{toid}
	     </when>
		<otherwise>
		like_type=#{typeid} and like_from_user_id=#{userid} and like_to_id=#{toid} and like_main_id=#{mainid} and like_main_type=#{maintype}
		</otherwise>
	     </choose>
	</delete>
	
	<insert id="addCollect">
	     insert into user_collection
	     (user_collection_type,user_collectioin_to_id,user_collection_from_user_id)values(#{typeid},#{toid},#{userid})
		
	</insert>
	
	<delete id="cancelCollect">
	delete from user_collection where user_collection_type=#{typeid} and user_collection_from_user_id=#{userid} and user_collectioin_to_id=#{toid}
	</delete>
	

</mapper>