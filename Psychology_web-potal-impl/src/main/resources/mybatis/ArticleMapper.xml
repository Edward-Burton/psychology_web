<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="cn.xhu.softwareengineering.potal.dao.ArticleMapper">

	<resultMap type="PsychoArticle" id="BaseResultMap">
		<id column="psycho_article_id" property="articleId" />
		<result column="psycho_article_title" property="articleTitle" />
		<result column="psycho_article_img" property="articleImg" />
		<result column="psycho_article_pubtime" property="pubTime" />
		<result column="psycho_article_author" property="author" />
		<result column="psycho_article_source" property="source" />
		<result column="psycho_article_originaltitle"
			property="originalTitle" />
		<result column="psycho_article_reads_num" property="readsNum" />
		<result column="psycho_article_content" property="content" />
		<association property="articleUser" javaType="PsychoUser"
			column="psycho_article_id" select="selectUserbyArticleId" />
		<!-- <association property="psychoCategory" javaType="PsychoCategory" resultMap="CategoryMap"/> -->
		<association property="psychoCategory"
			javaType="PsychoCategory" column="psycho_article_id"
			select="selectCategorybyArticleId" />
		<association property="commentsNum" javaType="Integer"
			column="psycho_article_id" select="selectcommentnumbyArticleId" />
		<collection property="articleLabels" ofType="PsychoLabel"
			column="psycho_article_id" select="selectLabelsbyArticleId" />
		<!-- <collection property="articleComments" ofType="ArticleComments" column="psycho_article_id" 
			select="selectCommentsbyArticleId"/> -->
		<collection property="articleComments"
			ofType="ArticleComments" column="psycho_article_id">
			<id property="article_comment_id" column="article_comment_id" />
			<result property="comment_article_id"
				column="comment_article_id" />
			<result property="article_comment_pultime"
				column="article_comment_pultime" />
			<result property="article_comment_pulcontent"
				column="article_comment_pulcontent" />
			<result property="article_comment_likes_num"
				column="article_comment_likes_num" />
			<result property="article_comment_parentid"
				column="article_comment_parentid" />
			<association property="comment_user"
				javaType="PsychoUser" column="comment_user_id"
				select="selectUserbyUserId" />
		</collection>
	</resultMap>

	<!-- <resultMap type="PsychoCategory" id="CategoryMap"> <id column="psycho_category_id" 
		property="psycho_category_id" /> <result column="psycho_category_name" property="psycho_category_name" 
		/> <result column="psycho_category_parentid" property="psycho_category_parentid" 
		/> <result column="psycho_category_description" property="psycho_category_description" 
		/> </resultMap> -->

	<resultMap type="ArticleComments" id="BaseComment">
		<id property="article_comment_id" column="article_comment_id" />
		<result property="comment_article_id"
			column="comment_article_id" />
		<result property="article_comment_pultime"
			column="article_comment_pultime" />
		<result property="article_comment_pulcontent"
			column="article_comment_pulcontent" />
		<association property="article_comment_likes_num" javaType="Integer"
			column="{article_comment_id=article_comment_id,comment_article_id=comment_article_id}" select="selectCommentlikesnum" />
		<association property="article_p_comment" javaType="ArticleComments" 
			column="article_comment_parentid" select="selectCommentbyId"/>
		<association property="comment_user" javaType="PsychoUser"
			column="comment_user_id" select="selectUserbyUserId" />
	</resultMap>

	<resultMap type="PsychoUser" id="BaseArticleUser">
		<id column="psychouser_id" property="psychouser_id" />
		<result column="psychouser_name" property="psychouser_name" />
		<result column="psychouser_head_portrait"
			property="psychouser_head_portrait" />
	</resultMap>
	
	<update id="updateArticle">
		update psycho_article
		<set>
			<if test="nowReadnum!=null">
			psycho_article_reads_num=#{nowReadnum},
			</if>
		</set>
		<where>psycho_article_id=#{articleid}</where>
	</update>
	
	<select id="selectCommentlikesnum" resultType="Integer">
		select count(*) from user_like where like_to_id =#{article_comment_id} and like_main_id=#{comment_article_id} and like_main_type=1
	</select>
	
	<!-- 根据id获取文章评论 -->
	<select id="selectCommentbyId" resultMap="BaseComment">
		select * from article_comments where article_comment_id =#{article_comment_parentid}
	</select>
	
	<!-- 获取文章标签列表 -->
	<select id="selectLabelsbyArticleId" resultType="PsychoLabel">
		select
		psycho_label_id,psycho_label_name,psycho_label_parentid,psycho_label_description,psycho_label_alias
		from psycho_label,article_label
		where label_id=psycho_label_id and
		psychoarticle_id =#{psycho_article_id}
	</select>
	
	<!-- 当前用户是否已点赞当前文章 -->
	<select id="queryUserIsLike" resultType="Integer">
		select count(*) from user_like where like_to_id=#{to_article_id} and like_type=#{liketype} and like_from_user_id=#{from_user_id}
	</select>
	
	<select id="queryLikeCountById" resultType="Integer">
		select count(*) from user_like where like_to_id=#{id} and like_type=#{liketype}
	</select>

	<!-- 获取文章作者 -->
	<select id="selectUserbyArticleId" resultType="PsychoUser">
		select
		pu.psychouser_id,pu.psychouser_name,psychouser_head_portrait
		from
		psycho_user pu,psycho_article pa
		where pa.psycho_article_id
		=#{psycho_article_id} and pu.psychouser_id =
		pa.psycho_article_pubuserid
	</select>

	<!-- 获取文章评论数 -->
	<select id="selectcommentnumbyArticleId" resultType="Integer">
		select
		count(*)
		from article_comments
		where comment_article_id
		=#{psycho_article_id}
	</select>

	<!-- 获取评论用户 -->
	<select id="selectUserbyUserId" resultMap="BaseArticleUser">
		select
		psychouser_id,psychouser_name,psychouser_head_portrait
		from psycho_user
		where psychouser_id =#{comment_user_id}
	</select>

	<!-- 获取文章心理学分类 -->
	<select id="selectCategorybyArticleId"
		resultType="PsychoCategory">
		select pc.*
		from psycho_article pa,psycho_category
		pc,article_category ac
		where pa.psycho_article_id =#{psycho_article_id}
		and pa.psycho_article_id = ac.article_id and ac.category_id =
		pc.psycho_category_id
	</select>



	<!-- 获得文章评论 :在collection中使用select属性， 则在调用查询方法返回都为BaseResultMap时，每次调用查询都会返回该查询结果，文章评论只需在文章详情页显示评论 -->
	<select id="queryComment"
		resultMap="BaseComment">
		select article_comments.*
		from
		psycho_article,article_comments
		where psycho_article.psycho_article_id
		= #{articleid} and article_comments.comment_article_id =
		psycho_article.psycho_article_id order by article_comment_pultime desc
	</select>

	<!-- 获取所有文章，包括文章心理学分类，当文章未分类，无法查出 -->
	<!-- <select id="selectAllArticles" resultMap="BaseResultMap"> select pa.psycho_article_id,pa.psycho_article_title,pa.psycho_article_img,psycho_article_pubtime,pa.psycho_article_content,pc.psycho_category_name 
		from psycho_article pa,psycho_category pc,article_category ac where pa.psycho_article_id 
		= ac.article_id and ac.category_id = pc.psycho_category_id </select> -->

	<!-- 获取所有文章的概览信息，包括文章首图，标题，描述，作者，时间，阅读数，心理学分类，当文章未分类， 可以查出，查出的文章对象的心理学分类属性为空， 
		获取时需要判断是否为空，再做近一页面响应 -->
	<select id="selectAllArticles" resultMap="BaseResultMap">
		<!-- select psycho_article_id,psycho_article_title,psycho_article_img,psycho_article_pubtime,psycho_article_content 
			from psycho_article -->
		select * from psycho_article
	</select>

	<!-- <select id="queryList" resultMap="BaseResultMap"> select psycho_article_id,psycho_article_title,psycho_article_img,psycho_article_pubtime,psycho_article_content 
		from psycho_article select * from psycho_article limit #{startIndex},#{pagesize} 
		</select> <select id="queryCount" resultType="Integer"> select psycho_article_id,psycho_article_title,psycho_article_img,psycho_article_pubtime,psycho_article_content 
		from psycho_article select count(*) from psycho_article </select> -->

	<!-- 查询文章概览列表 -->
	<select id="queryList" resultMap="BaseResultMap">
		<!-- select psycho_article_id,psycho_article_title,psycho_article_img,psycho_article_pubtime,psycho_article_content 
			from psycho_article -->
		<!-- select * from psycho_article LEFT JOIN article_category ON psycho_article_id=article_id -->
		select
		psycho_article_id,psycho_article_title,psycho_article_pubtime,psycho_article_img,psycho_article_pubuserid,psycho_article_content,psycho_article_reads_num
		from psycho_article
		<if test="categoryId!=null"> INNER JOIN article_category ON
			psycho_article_id=article_id</if>
		<if test="categoryId==null"> LEFT JOIN article_category ON
			psycho_article_id=article_id</if>
		<where>
			<!-- <if test="queryText!=null">psycho_article_title like '%${queryText}%'</if> 
				会出现sql注入 -->
			<!-- 实现拼串 -->
			<if test="categoryId!=null">article_category.category_id=#{categoryId}</if>
			<if test="pcategoryId!=null">article_category.category_id IN (SELECT
				psycho_category_id FROM psycho_category WHERE
				psycho_category_parentid=#{pcategoryId})</if>
			<if test="queryText!=null">and psycho_article_title like
				concat("%",#{queryText},"%")</if>
		</where>
		order by psycho_article_pubtime desc
		limit #{startIndex},#{pagesize}
	</select>

	<select id="queryCount" resultType="Integer">
		<!-- select psycho_article_id,psycho_article_title,psycho_article_img,psycho_article_pubtime,psycho_article_content 
			from psycho_article -->
		select COUNT(*) from psycho_article
		<if test="categoryId!=null"> INNER JOIN article_category ON
			psycho_article_id=article_id</if>
		<if test="categoryId==null"> LEFT JOIN article_category ON
			psycho_article_id=article_id</if>
		<where>
			<!-- <if test="queryText!=null">psycho_article_title like '%${queryText}%'</if> 
				用$会出现sql注入的问题 -->
			<if test="categoryId!=null">article_category.category_id=#{categoryId}</if>
			<if test="pcategoryId!=null">article_category.category_id IN (SELECT
				psycho_category_id FROM psycho_category WHERE
				psycho_category_parentid=#{pcategoryId})</if>
			<if test="queryText!=null">psycho_article_title like concat("%",#{queryText},"%")
			</if>
		</where>

	</select>

	<!-- 通过文章ID获得文章详细信息 -->
	<select id="selectArticleById" resultMap="BaseResultMap">
		<!-- select pa.*,ac.article_comment_id,ac.comment_article_id,ac.article_comment_pulcontent,ac.comment_user_id from psycho_article pa LEFT JOIN article_comments ac on pa.psycho_article_id = ac.comment_article_id
where pa.psycho_article_id = #{id} -->
		select *  from psycho_article WHERE psycho_article_id = #{id}
	</select>

	<!-- 通过心理学分类查出文章 -->
	<select id="selectArticlesByCategoryId"
		resultMap="BaseResultMap">
		SELECT
		pa.psycho_article_id,pa.psycho_article_title,pa.psycho_article_content,pc.psycho_category_name
		FROM psycho_article pa INNER JOIN article_category ac ON
		pa.psycho_article_id = ac.article_id INNER JOIN psycho_category pc ON
		ac.category_id =
		pc.psycho_category_id
		<where>
			pc.psycho_category_id = #{id}
			<if test=""></if>
		</where>

	</select>
	<!-- 添加评论 -->
	<insert id="addComment"
		parameterType="map" useGeneratedKeys="true"
		keyProperty="article_comment_id">
		insert into article_comments
		<choose>
		<when test="pcommentid==null">
		(comment_article_id,comment_user_id,article_comment_pultime,article_comment_pulcontent)
		values 
		(#{articleid},#{userid},#{curtime},#{inputValue})
		</when>
		<otherwise>
		(comment_article_id,comment_user_id,article_comment_pultime,article_comment_pulcontent,article_comment_parentid)
		values 
		(#{articleid},#{userid},#{curtime},#{inputValue},#{pcommentid})
		</otherwise>
		</choose>
		
		<!-- <selectKey keyProperty="id" resultType="int"> select @@identity as 
			id </selectKey> -->
	</insert>

	<!-- 添加文章 -->
	<insert id="addArticle" parameterType="PsychoArticle">
		insert psycho_article
		(psycho_article_title,psycho_article_pubtime,psycho_article_img,psycho_article_pubuserid,psycho_article_content)
		values (
		#{articleTitle},#{pubTime},#{articleImg},#{articleUser.psychouser_id},#{content}
		)
		<selectKey keyProperty="articleId" resultType="int"> select
			@@identity </selectKey>
	</insert>
	<!-- <insert id="insertUser"> insert into t_user ( name,userpswd,sex,email,loginacct 
		) values ( #{name},#{userpswd},#{sex},#{email},#{loginacct} ) <selectKey 
		keyProperty="id" resultType="int"> select @@identity as id </selectKey> </insert> -->

	<!-- <update id="updateUser"> update t_user set name = #{name}, sex = #{sex}, 
		email = #{email}, loginacct = #{loginacct} where id = #{id} </update> <delete 
		id="deleteUserRole"> delete from t_user_role where userid = #{userid} and 
		roleid = #{roleid} </delete> -->

	<!-- 获取心理学分类 -->
	<select id="queryCategory" resultType="PsychoCategory">
		select * from psycho_category
		<where>
			<!-- <if test="parentid !=null">psycho_category_parentid = #{parentid}</if> 
				<if test="parentid == null">psycho_category_parentid IS NULL </if> -->
			<if test="sub_category == null">psycho_category_parentid IS NULL</if>
			<if test="sub_category != null">psycho_category_parentid IS NOT NULL</if>
		</where>
	</select>

</mapper>